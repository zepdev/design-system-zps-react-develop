import{j as t}from"./jsx-dev-runtime-8ab8c10c.js";import{G as p}from"./global-variants-71b69725.js";import{H as u}from"./HeaderShortComponent-0928bf92.js";import{R as d}from"./RichText-c06f2dc1.js";import{L as f}from"./Layout-a8c3c09c.js";import{a as h}from"./mocks-dd8b5ca4.js";import"./index-b1e7e93e.js";import"./_commonjsHelpers-de833af9.js";import"./index-ff2c9236.js";import"./clsx-0839fdbe.js";import"./moving-forward-arrow-a1f6b1da.js";import"./jsx-runtime-6f6342d7.js";import"./index.es16-0bcfc29a.js";import"./index.es31-95f1013f.js";import"./index.es13-cfbbaaf2.js";import"./index.es18-4e559a5f.js";const a=({content:r,variant:n=p.Zps,headline:i,id:m,...c})=>t.jsxDEV(f,{id:m,className:"zep-flex md:zep-flex-row zep-flex-col zep-items-start zep-gap-2 sm:zep-gap-2.5 md:zep-gap-1.5  lg:zep-gap-5 ",children:[i&&t.jsxDEV(u,{variant:n,headline:i,className:"zep-w-full",...c},void 0,!1,{fileName:"/home/circleci/project/src/components/rich-text-pattern/RichTextPattern.tsx",lineNumber:17,columnNumber:20},globalThis),t.jsxDEV(d,{content:r,variant:n},void 0,!1,{fileName:"/home/circleci/project/src/components/rich-text-pattern/RichTextPattern.tsx",lineNumber:18,columnNumber:7},globalThis)]},void 0,!0,{fileName:"/home/circleci/project/src/components/rich-text-pattern/RichTextPattern.tsx",lineNumber:16,columnNumber:5},globalThis);try{a.displayName="RichTextPattern",a.__docgenInfo={description:"",displayName:"RichTextPattern",props:{variant:{defaultValue:{value:"GlobalVariants.Zps"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"ZPS"'},{value:'"CAT"'}]}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},content:{defaultValue:null,description:"",name:"content",required:!0,type:{name:"BlocksContent"}},tagline:{defaultValue:null,description:"",name:"tagline",required:!1,type:{name:"string"}},headline:{defaultValue:null,description:"",name:"headline",required:!1,type:{name:"string"}},showArrow:{defaultValue:null,description:"",name:"showArrow",required:!1,type:{name:"boolean"}}}}}catch{}const E={title:"Patterns/RichTextPattern",component:a,tags:["autodocs"],argTypes:{}},e={args:{content:h,headline:"Headline",tagline:"Tagline"}};var o,l,s;e.parameters={...e.parameters,docs:{...(o=e.parameters)==null?void 0:o.docs,source:{originalSource:`{
  args: {
    content: mockRichText,
    headline: 'Headline',
    tagline: 'Tagline'
  } as RichTextPatternProps
}`,...(s=(l=e.parameters)==null?void 0:l.docs)==null?void 0:s.source}}};const H=["Default"];export{e as Default,H as __namedExportsOrder,E as default};
