{"version":3,"file":"CardSquare-4efa0bff.js","sources":["../../public/assets/yellow-right-arrow.svg","../../src/hooks/useContainerDimensions.ts","../../src/components/card-square/CardSquare.tsx"],"sourcesContent":["export default \"__VITE_ASSET__39585efc__\"","import { useEffect, useState } from 'react';\nexport const useContainerDimensions = (myRef: React.MutableRefObject<HTMLDivElement | null>) => {\n  const [dimensions, setDimensions] = useState({ width: 0 });\n  useEffect(() => {\n    const updateDimensions = () => {\n      if (myRef.current) {\n        setDimensions({\n          width: myRef.current.offsetWidth || 0,\n        });\n      }\n    };\n    // Observe the element's size\n    const observer = new ResizeObserver(updateDimensions);\n    if (myRef.current) {\n      observer.observe(myRef.current);\n      updateDimensions();\n    }\n    return () => {\n      observer.disconnect();\n    };\n  }, [myRef]);\n  return dimensions;\n};\n","import { cva } from 'class-variance-authority';\nimport clsx from 'clsx';\nimport { FC, useEffect, useRef, useState } from 'react';\nimport arrowImg from '../../../public/assets/yellow-right-arrow.svg';\nimport { useContainerDimensions } from '../../hooks/useContainerDimensions';\nimport { GlobalVariants } from '../../interfaces/global-variants';\nimport { CardSquareProps } from './card-square.interface';\n\nexport const cardSquareVariants = {\n  [GlobalVariants.Zps]: [\n    'zep-bg-gradient-to-r zep-from-[rgb(32,27,52)] zep-to-[rgb(32,23,94)] group-hover:zep-bg-none group-hover:zep-bg-primary-hover',\n  ],\n  [GlobalVariants.Cat]: ['zep-bg-neutral-dark-default  group-hover:zep-bg-none group-hover:zep-bg-neutral-dark-hover'],\n};\nexport const cardSquareCardCva = cva(\n  [\n    `zep-flex\n     zep-justify-between\n     zep-items-center\n     zep-absolute\n     lg:zep-bottom-2.5\n     lg:zep-left-2.5\n     lg:zep-right-2.5\n     md:zep-bottom-2\n     md:zep-left-2\n     md:zep-right-2\n     zep-bottom-1.5\n     zep-left-1.5\n     zep-right-1.5\n     zep-p-1.5`,\n  ],\n  {\n    variants: {\n      variant: cardSquareVariants,\n    },\n    defaultVariants: {\n      variant: GlobalVariants.Zps,\n    },\n  },\n);\n\nconst CardSquare: FC<CardSquareProps> = ({\n  imageSrc,\n  isCardSquarePattern = false,\n  description,\n  headline,\n  imageAlt,\n  hideDescription,\n  variant,\n  cardListsLength = 0,\n}) => {\n  const [isContainerClassApplied, setIsContainerClassApplied] = useState(false);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth); // Dynamically track screen size\n  const paddingDescription = isCardSquarePattern ? 'md:zep-p-[20px]' : 'md:zep-p-2 lg:zep-p-2.5';\n  const componentRef = useRef<HTMLDivElement | null>(null);\n  const { width } = useContainerDimensions(componentRef);\n\n  const isMdScreen = windowWidth >= 1024 && windowWidth < 1263;\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (windowWidth < 1024) {\n      setIsContainerClassApplied(true);\n    } else if (isMdScreen && cardListsLength !== 2 && cardListsLength !== 4) {\n      setIsContainerClassApplied(true);\n    } else {\n      setIsContainerClassApplied(false);\n    }\n  }, [windowWidth, isMdScreen, cardListsLength]);\n\n  return (\n    <div\n      className={clsx(\n        'zep-relative',\n        'zep-group',\n        'hover:zep-brightness-90',\n        'zep-min-w-[282px]',\n        'zep-max-w-[700px]',\n        'zep-w-full',\n        isContainerClassApplied ? 'zep-@container' : 'zep-@container-normal',\n      )}\n      tabIndex={0}\n      data-testid=\"zep-card-square\"\n      ref={componentRef}\n    >\n      <img\n        className=\"zep-object-cover zep-w-full zep-h-full group-hover:zep-transition-all zep-duration-1000 group-hover:zep-brightness-90\"\n        src={imageSrc}\n        alt={imageAlt}\n        title=\"construction site\"\n      />\n      <div className={`${cardSquareCardCva({ variant })} ${paddingDescription}`}>\n        <div className=\"zep-flex zep-flex-col zep-items-start zep-w-full\">\n          <h4\n            data-testid=\"card-square-headline\"\n            className={clsx('zep-typography-headlineMD-fluid-cqi', 'zep-text-background-light', 'zep-text-left', {\n              'zep-mb-1': width > 350,\n            })}\n          >\n            {headline}\n          </h4>\n          {width > 350 && (\n            <p\n              data-testid=\"card-square-description\"\n              className={clsx(\n                'md:zep-block',\n                {\n                  'zep-hidden': isCardSquarePattern && hideDescription,\n                },\n                'zep-typography-bodyText',\n                'zep-text-background-light',\n                'zep-text-left',\n                'zep-break-all',\n              )}\n            >\n              {description}\n            </p>\n          )}\n        </div>\n        <div className=\"zep-transition group-hover:zep-translate-x-0.75 zep-ml-1.5 \">\n          <img src={arrowImg} alt={'yellow left arrow'} data-testid=\"zep-her-arrowIcon\"></img>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport { CardSquare };\n"],"names":["arrowImg","useContainerDimensions","myRef","dimensions","setDimensions","useState","useEffect","updateDimensions","observer","cardSquareVariants","GlobalVariants","cardSquareCardCva","cva","CardSquare","imageSrc","isCardSquarePattern","description","headline","imageAlt","hideDescription","variant","cardListsLength","isContainerClassApplied","setIsContainerClassApplied","windowWidth","setWindowWidth","paddingDescription","componentRef","useRef","width","isMdScreen","handleResize","jsxDEV","clsx","this"],"mappings":"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"}