{"version":3,"file":"LinkListItem-38cd473d.js","sources":["../../src/components/link-list-item/LinkListItem.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport React from 'react';\nimport { GlobalVariantExtended, GlobalVariants } from '../../interfaces/global-variants';\nimport { Accordion, Link, LinkMode, LinkTarget } from '@zepdev/design-system-component-library-react';\nimport { LinkListItemProps } from '../link-list-item';\nimport { cva } from 'class-variance-authority';\n\nconst textColorVariants = {\n  [GlobalVariants.Zps]: 'zep-text-primary-default',\n  [GlobalVariants.Cat]: 'zep-text-typography-dark-100',\n  [GlobalVariantExtended.ZpsBg]: 'zep-text-typography-light-100',\n  [GlobalVariantExtended.CatBg]: 'zep-text-typography-light-100',\n}\n\nconst textColorClass = cva([],{\n  variants: {\n    variant: textColorVariants,\n  },\n  defaultVariants: {\n    variant: GlobalVariants.Zps,\n  }\n})\n\nconst Headline = ({ variant, headline }: Partial<LinkListItemProps>) => {\n  if (headline) {\n    return (\n      <h4\n        data-testid=\"link-list-headline\"\n        className={clsx('zep-typography-headlineSM-fluid-cqi', 'zep-break-all', textColorClass({ variant }))}\n      >\n        {headline}\n      </h4>\n    )\n  }\n\n  return null;\n}\n\nconst Description = ({ variant, description }: Partial<LinkListItemProps>) => {\n  if (description) {\n    return (\n      <p\n        data-testid=\"link-list-description\"\n        className={clsx('zep-typography-bodyText', 'zep-break-all', textColorClass({ variant }))}\n      >\n        {description}\n      </p>\n    )\n  }\n\n  return null;\n}\n\nconst Links = ({ links, variant }: LinkListItemProps) => {\n  return (\n    <div\n      data-testid=\"link-list-links\"\n      className={clsx(\n        'zep-flex',\n        'zep-flex-col',\n        'zep-gap-1',\n        textColorClass({ variant }),\n      )}\n    >\n      {links.map((link, index) => (\n        <Link\n          key={index}\n          label={link.label}\n          icon={link.icon}\n          href={link.href}\n          iconPlacement=\"before\"\n          hasIcon\n          target={LinkTarget.Blank}\n          mode={LinkMode.Inline}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport const LinkListItem: React.FC<LinkListItemProps> = ({\n  headline,\n  description,\n  variant = GlobalVariants.Zps,\n  links,\n  isMultiListItem = false,\n  className,\n}) => {\n  const linkList = links.length > 15 ? links.slice(0, 15) : links;\n  const widthClass = isMultiListItem\n    ? 'md:zep-flex zep-hidden zep-min-w-[280px]'\n    : 'zep-flex zep-max-w-[774px] zep-min-w-[290px]';\n  const linkListItemBg = variant === GlobalVariants.Cat || variant === GlobalVariants.Zps\n    ? 'zep-bg-background-medium' : '';\n\n  return (\n    <>\n      <div\n        className={clsx(\n          'zep-gap-1.5',\n          'zep-p-1.5',\n          'sm:zep-p-2',\n          'md:zep-p-2.5',\n          'zep-flex-col',\n          'zep-items-start',\n          textColorClass({ variant }),\n          linkListItemBg,\n          widthClass,\n          className,\n        )}\n        data-testid=\"zep-link-list\"\n      >\n        <Headline headline={headline} variant={variant} />\n        <Description description={description} variant={variant} />\n        <Links links={linkList} variant={variant} />\n      </div>\n      <Accordion\n        className={clsx(\n          'zep-w-full',\n          {\n            'zep-hidden': !isMultiListItem,\n            'md:zep-hidden zep-min-w-[280px] zep-border-none': isMultiListItem,\n          },\n          textColorClass({ variant }),\n          linkListItemBg,\n          className,\n        )}\n        items={[{\n          title: headline || '',\n          content: (\n            <div className=\"zep-flex zep-flex-col zep-gap-1\">\n              <Description description={description} variant={variant} />\n              <Links links={linkList} variant={variant} />\n            </div>\n          )\n        }]}\n      />\n    </>\n  );\n};\n"],"names":["textColorVariants","GlobalVariants","GlobalVariantExtended","textColorClass","cva","Headline","variant","headline","jsxDEV","clsx","this","Description","description","Links","links","link","index","Link","LinkTarget","LinkMode","LinkListItem","isMultiListItem","className","linkList","widthClass","linkListItemBg","Fragment","Accordion"],"mappings":"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"}