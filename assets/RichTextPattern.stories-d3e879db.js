import{j as t}from"./jsx-dev-runtime-8ab8c10c.js";import{G as p}from"./global-variants-0f433d85.js";import{H as c}from"./HeaderShortComponent-11eb512b.js";import{R as u}from"./RichText-c001a5e0.js";import{L as d}from"./Layout-cb684865.js";import{m as x}from"./mocks-b7644162.js";import"./index-b1e7e93e.js";import"./_commonjsHelpers-de833af9.js";import"./index-ff2c9236.js";import"./clsx-0839fdbe.js";import"./moving-forward-arrow-a1f6b1da.js";import"./index.es13-b84986ab.js";import"./index.es16-55d8eb1a.js";import"./index.es29-7715336a.js";const a=({content:r,variant:s=p.Zps,headline:n,...m})=>t.jsxDEV(d,{className:"zep-flex md:zep-flex-row zep-flex-col zep-items-start md:zep-px-[66px] xl:zep-px-[124px] zep-gap-2 sm:zep-gap-2.5 md:zep-gap-1.5 xl:zep-gap-5",children:[n&&t.jsxDEV(c,{headline:n,className:"zep-w-full",...m},void 0,!1,{fileName:"/home/circleci/project/src/components/rich-text-pattern/RichTextPattern.tsx",lineNumber:17,columnNumber:9},globalThis),t.jsxDEV(u,{content:r,variant:s},void 0,!1,{fileName:"/home/circleci/project/src/components/rich-text-pattern/RichTextPattern.tsx",lineNumber:22,columnNumber:7},globalThis)]},void 0,!0,{fileName:"/home/circleci/project/src/components/rich-text-pattern/RichTextPattern.tsx",lineNumber:15,columnNumber:5},globalThis);try{a.displayName="RichTextPattern",a.__docgenInfo={description:"",displayName:"RichTextPattern",props:{variant:{defaultValue:{value:"GlobalVariants.Zps"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"ZPS"'},{value:'"CAT"'}]}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},content:{defaultValue:null,description:"",name:"content",required:!0,type:{name:"BlocksContent"}},tagline:{defaultValue:null,description:"",name:"tagline",required:!1,type:{name:"string"}},headline:{defaultValue:null,description:"",name:"headline",required:!1,type:{name:"string"}},showArrow:{defaultValue:null,description:"",name:"showArrow",required:!1,type:{name:"boolean"}}}}}catch{}const q={title:"Patterns/RichTextPattern",component:a,tags:["autodocs"],argTypes:{}},e={args:{content:x,headline:"Headline",tagline:"Tagline"}};var o,i,l;e.parameters={...e.parameters,docs:{...(o=e.parameters)==null?void 0:o.docs,source:{originalSource:`{
  args: {
    content: mockRichText,
    headline: 'Headline',
    tagline: 'Tagline'
  } as RichTextPatternProps
}`,...(l=(i=e.parameters)==null?void 0:i.docs)==null?void 0:l.source}}};const w=["Default"];export{e as Default,w as __namedExportsOrder,q as default};
