{"version":3,"file":"HeaderLongComponent-e3187230.js","sources":["../../src/components/header-long-component/HeaderLongComponent.tsx"],"sourcesContent":["import React from 'react';\nimport { Link, LinkMode } from '@zepdev/design-system-component-library-react';\nimport { clsx } from 'clsx';\nimport { Button, ZpsButtonVariant } from '../zps-button';\nimport { HeaderLongComponentProps, LinkComponentProps } from './HeaderLongComponent.interface';\nimport { GlobalVariantExtended, GlobalVariants } from '../../interfaces/global-variants';\n\nconst LinkComponent = ({\n  type,\n  linkHref,\n  linkText,\n  onClick,\n  variant,\n}: LinkComponentProps) => {\n  const linkClass = {\n    'zep-text-yellow-500': variant === GlobalVariantExtended.ZpsBg || variant === GlobalVariantExtended.CatBg,\n    'zep-text-typography-dark-100': variant === GlobalVariants.Cat,\n    'zep-text-indigo-500': GlobalVariants.Zps,\n  }\n\n  switch (type) {\n    case 'link':\n      return (\n        <Link\n          className={clsx(\n            linkClass,\n            'zep-h-fit',\n            'zep-font-400',\n            'zep-whitespace-nowrap',\n            'hover:zep-underline',\n            'hover:zep-font-500',\n            'zep-cursor-pointer',\n          )}\n          label={linkText || ''}\n          hasIcon={true}\n          href={linkHref}\n          mode={LinkMode.Standalone}\n        />\n      )\n    case 'button':\n      return (\n        <Button\n          className=\"zep-whitespace-nowrap sm:zep-w-fit zep-h-fit\"\n          label={linkText}\n          onClick={onClick}\n          variant={ZpsButtonVariant.Primary}\n        />\n      )\n    default:\n      return null;\n  }\n}\n\nexport const HeaderLongComponent: React.FC<HeaderLongComponentProps> = ({\n  tagline,\n  headline,\n  description,\n  variant = GlobalVariants.Zps,\n  ...linkProps\n}) => {\n  const containerClass = {\n    'zep-text-typography-light-100': variant === GlobalVariantExtended.ZpsBg || variant === GlobalVariantExtended.CatBg,\n    'zep-text-typography-dark-100': variant === GlobalVariants.Cat,\n    'zep-text-indigo-500': variant === GlobalVariants.Zps,\n  }\n\n  const taglineClass = {\n    'zep-text-steel-500': variant === GlobalVariants.Zps || variant === GlobalVariantExtended.ZpsBg,\n    'zep-text-typography-dark-70 zep-opacity-70': variant === GlobalVariants.Cat,\n    'zep-text-typography-light-70 zep-opacity-70': variant === GlobalVariantExtended.CatBg,\n  }\n\n  return (\n    <div\n      className={clsx('zep-w-full', 'zep-flex', 'zep-flex-col', 'zep-gap-1.5', 'md:zep-gap-2.5', 'zep-items-start')}\n      data-testid=\"header-long\"\n    >\n      <div className={clsx('zep-w-full', 'zep-flex', 'zep-flex-col', 'zep-gap-0.5', 'zep-items-start')}>\n        <h3 className={clsx(taglineClass, 'zep-typography-taglineMD', 'zep-break-all')}>{tagline}</h3>\n        {/* headline and Button/Link wrapper */}\n        <div className={clsx(\n          'zep-w-full',\n          'zep-flex',\n          'zep-flex-col',\n          'xl:zep-flex-row',\n          'xl:zep-justify-between',\n          'xl:zep-gap-2',\n          'zep-gap-1.5',\n        )}>\n          <h2\n            className={clsx(\n              containerClass,\n              'zep-max-w-[944px]',\n              'zep-break-all',\n              'zep-typography-headlineLG-fluid-cqi',\n              'zep-text-start',\n            )}\n          >\n            {headline}\n          </h2>\n          {/* Button or Link or None */}\n          <LinkComponent {...linkProps} variant={variant} />\n        </div>\n      </div>\n      <p className={clsx(containerClass, 'zep-text-start', 'zep-max-w-[944px]', 'zep-break-all')}>{description}</p>\n    </div>\n  );\n}\n"],"names":["LinkComponent","type","linkHref","linkText","onClick","variant","linkClass","GlobalVariantExtended","GlobalVariants","jsxDEV","Link","clsx","LinkMode","this","Button","ZpsButtonVariant","HeaderLongComponent","tagline","headline","description","linkProps","containerClass","taglineClass"],"mappings":"8MAOA,MAAAA,EAAA,CAAA,CAAuB,KAAAC,EACrB,SAAAC,EACA,SAAAC,EACA,QAAAC,EACA,QAAAC,CAEF,IAAA,CACE,MAAAC,EAAA,CAAkB,sBAAAD,IAAAE,EAAA,OAAAF,IAAAE,EAAA,MACoF,+BAAAF,IAAAG,EAAA,IACzC,sBAAAA,EAAA,GACrB,EAGxC,OAAAP,EAAA,CAAc,IAAA,OAEV,OAAAQ,EAAA,OACEC,EAAC,CAAA,UAAAC,EACYL,EACT,YACA,eACA,wBACA,sBACA,qBACA,oBACA,EACF,MAAAH,GAAA,GACmB,QAAA,GACV,KAAAD,EACH,KAAAU,EAAA,UACS,EAAA,OAbjB,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,CAAA,EAAAC,UAAA,EAcA,IAAA,SAGF,OAAAJ,EAAA,OACEK,EAAC,CAAA,UAAA,+CACW,MAAAX,EACH,QAAAC,EACP,QAAAW,EAAA,OAC0B,EAAA,OAJ5B,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,CAAA,EAAAF,UAAA,EAKA,QAGF,OAAA,IAAO,CAEb,EAEOG,EAAA,CAAA,CAAiE,QAAAC,EACtE,SAAAC,EACA,YAAAC,EACA,QAAAd,EAAAG,EAAA,IACyB,GAAAY,CAE3B,IAAA,CACE,MAAAC,EAAA,CAAuB,gCAAAhB,IAAAE,EAAA,OAAAF,IAAAE,EAAA,MACyF,+BAAAF,IAAAG,EAAA,IACnD,sBAAAH,IAAAG,EAAA,GACT,EAGpDc,EAAA,CAAqB,qBAAAjB,IAAAG,EAAA,KAAAH,IAAAE,EAAA,MACuE,6CAAAF,IAAAG,EAAA,IACjB,8CAAAH,IAAAE,EAAA,KACQ,EAGnF,OAAAE,EAAA,OACE,MAAC,CAAA,UAAAE,EAAA,aAAA,WAAA,eAAA,cAAA,iBAAA,iBAAA,EAC6G,cAAA,cAChG,SAAA,CAEZF,EAAAA,OAAA,MAAA,CAAA,UAAAE,EAAA,aAAA,WAAA,eAAA,cAAA,iBAAA,EAAA,SAAA,CACEF,EAAAA,OAAA,KAAA,CAAA,UAAAE,EAAAW,EAAA,2BAAA,eAAA,EAAA,SAAAL,CAAA,EAAA,OAAA,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,CAAA,EAAAJ,UAAA,EAAyFJ,SAAA,MAAA,CAAA,UAAAE,EAEzE,aACd,WACA,eACA,kBACA,yBACA,eACA,aACA,EAAA,SAAA,CAEAF,EAAA,OAAA,KAAC,CAAA,UAAAE,EACYU,EACT,oBACA,gBACA,sCACA,gBACA,EACF,SAAAH,CAEC,EAAA,OATH,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,EAAA,EAAAL,UAAA,EAUAJ,EAAA,OAAAT,EAAA,CAAA,GAAAoB,EAAA,QAAAf,GAAA,OAAA,GAAA,CAEA,SAAA,sFAAA,WAAA,IAAA,aAAA,EAAA,EAAAQ,UAAA,CAAgD,GAAA,OAAA,GAAA,CArBlD,SAAA,sFAAA,WAAA,GAAA,aAAA,CAAA,EAAAA,UAAA,CAsBA,GAAA,OAAA,GAAA,CAzBF,SAAA,sFAAA,WAAA,GAAA,aAAA,CAAA,EAAAA,UAAA,EA0BAJ,EAAAA,OAAA,IAAA,CAAA,UAAAE,EAAAU,EAAA,iBAAA,oBAAA,eAAA,EAAA,SAAAF,CAAA,EAAA,OAAA,GAAA,CACA,SAAA,sFAAA,WAAA,IAAA,aAAA,CAAA,EAAAN,UAAA,CAAyG,CAAA,EAAA,OA/B3G,GAAA,CAAA,SAAA,sFAAA,WAAA,GAAA,aAAA,CAAA,EAAAA,UAAA,CAkCJ"}